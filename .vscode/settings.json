{
    "[typescript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.formatOnSave": true
    },
    "[javascript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.fixAll.eslint": "always",
            "source.organizeImports": "always"
        },
    },
    "[yaml]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.formatOnSave": true
    },
    "[toml]": {
        "editor.defaultFormatter": "tamasfe.even-better-toml",
        "editor.formatOnSave": true
    },
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "typescript.enablePromptUseWorkspaceTsdk": true,
    "typescript.tsdk": "node_modules/typescript/lib",
    "editor.formatOnSave": true,
    "git.allowForcePush": true,
    "git.autofetch": "all",
    "git.autoStash": true,
    "git.pruneOnFetch": true,
    "git.rebaseWhenSync": true,
    "git.suggestSmartCommit": false,
    "git.supportCancellation": true,
    "git.useEditorAsCommitInput": false,
    "git.pullBeforeCheckout": true,
    "diffEditor.ignoreTrimWhitespace": false,
    "terminal.integrated.persistentSessionReviveProcess": "never",
    "files.autoSave": "onFocusChange",
    "search.useIgnoreFiles": true,
    "git.useCommitInputAsStashMessage": true,
    "files.eol": "\n",
    "python.testing.pytestEnabled": true,
    "testing.automaticallyOpenPeekView": "never",
    "pylint.importStrategy": "fromEnvironment",
    "pylint.severity": {
        "convention": "Warning",
        "error": "Error",
        "fatal": "Error",
        "refactor": "Warning",
        "warning": "Warning",
        "info": "Warning"
    },
    "[python]": {
        "editor.defaultFormatter": "charliermarsh.ruff",
        "editor.codeActionsOnSave": {
            "source.organizeImports": "always"
        }
    },
    "explorer.compactFolders": false,
    "search.exclude": {
        "pw": true
    },
    "python.terminal.activateEnvInCurrentTerminal": true,
    "editor.acceptSuggestionOnCommitCharacter": false,
    "jest.runMode": "on-demand",
    "pylint.ignorePatterns": [
        "**/pyright-internal/src/tests/samples/*",
        "**/pyright-internal/typeshed-fallback/*",
        "**/docstubs/*"
    ],
    // even though python.terminal.activateEnvInCurrentTerminal is enabled, we still need to add the venv's script folder to the PATH
    // because vscode's npm tasks do not run with the activated venv
    "terminal.integrated.env.windows": {
        "PATH": "${workspaceFolder}/.pyprojectx/main;${workspaceFolder}/node_modules/.bin;${env:PATH};${workspaceFolder}/.venv/Scripts"
    },
    "terminal.integrated.env.osx": {
        "PATH": "${workspaceFolder}/.pyprojectx/main:${workspaceFolder}/node_modules/.bin:${env:PATH}:${workspaceFolder}/.venv/bin"
    },
    "terminal.integrated.env.linux": {
        "PATH": "${workspaceFolder}/.pyprojectx/main:${workspaceFolder}/node_modules/.bin:${env:PATH}:${workspaceFolder}/.venv/bin"
    },
    "task.problemMatchers.neverPrompt": true,
    "editor.unicodeHighlight.nonBasicASCII": true,
    "ruff.nativeServer": true,
    "typescript.inlayHints.parameterNames.enabled": "literals",
    "typescript.inlayHints.enumMemberValues.enabled": true,
    // this is a hack to make the jest vscode extension use the venv's version of node (from nodejs-wheel),
    // since it ignores the PATH from terminal.integrated.env. this is not used when debugging tests.
    // the run config for that is in launch.json (vscode-jest-tests.v2)
    "jest.jestCommandLine": "\"./.vscode/jest\"",
    "files.readonlyInclude": {
        ".pdm-build/**/*": true,
        ".pyprojectx/**/*": true,
        ".pytest_cache/**/*": true,
        ".venv/**/*": true,
        "**/dist/**/*": true,
        "**/node_modules/**/*": true,
        "**/out/**/*": true,
        "basedpyright/index.js": true,
        "basedpyright/langserver.index.js": true,
        "docstubs/**/*": true,
        "package-lock.json": true,
        "uv.lock": true,
        "pw.lock": true,
        "pw": true,
        "pw.bat": true
    },
    // package.json file copied into the pypi package
    // this is a top-level folder but the ** is still needed due to https://github.com/microsoft/vscode/issues/92114
    "npm.exclude": "**/basedpyright/*",
    "git.blame.editorDecoration.enabled": true,
    "git.blame.statusBarItem.enabled": true,
    "chat.commandCenter.enabled": false,
    "yaml.schemas": {
        // https://github.com/redhat-developer/vscode-yaml/issues/1022
        "https://json.schemastore.org/github-issue-config.json": "./.github/ISSUE_TEMPLATE/config.yml"
    },
    "yaml.customTags": [
        "!ENV scalar",
        "!ENV sequence",
        "!relative scalar",
        "tag:yaml.org,2002:python/name:material.extensions.emoji.to_svg",
        "tag:yaml.org,2002:python/name:material.extensions.emoji.twemoji",
        "tag:yaml.org,2002:python/name:pymdownx.superfences.fence_code_format",
        "tag:yaml.org,2002:python/object/apply:pymdownx.slugs.slugify mapping"
    ],
    "telemetry.feedback.enabled": false,
    "workbench.editor.revealIfOpen": true
}
