name: 'build and release'

env:
  PYTHON_VERSION: '3.13'
  ARTIFACT_NAME_VSIX: vsix
  VSIX_NAME: vscode-pyright.vsix
  VSIX_DIR: packages/vscode-pyright
  NPM_PACKAGE_DIR: packages/pyright
  BROWSER_NPM_PACKAGE_DIR: packages/browser-pyright
  # prevent uv from constantly reinstalling the project and overwriting docstubs
  UV_NO_SYNC: true

on: push

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
      packages: write
      pull-requests: read

    strategy:
      matrix:
        index: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        id: install_python
        with:
          python-version: ${{env.PYTHON_VERSION}}

      - run: ./pw uv sync

      # using relative path for npm scripts because it needs to work in the package directories too
      - name: add pyprojectx and npm scripts to PATH

        run: |
          realpath ./.pyprojectx/main >> $GITHUB_PATH
          echo ./node_modules/.bin >> $GITHUB_PATH

      - id: current-version
        # https://github.com/astral-sh/uv/issues/6298
        run: |
          echo ::set-output name=CURRENT_VERSION::$(uv run python -c "from build.py3_8.version import get;print(get())")
          echo ::set-output name=CURRENT_UPSTREAM_VERSION::$(uv run node -p "require(\"./package.json\").version")
        working-directory: ${{ env.NPM_PACKAGE_DIR }}

      - name: get currently published npm package version
        if: github.ref == 'refs/heads/main'
        run: echo ::set-output name=VERSION_INFO::$(uv run npm view $(node -p "require(\"./package.json\").name")@=${{ steps.current-version.outputs.CURRENT_VERSION }})
        id: version-was-changed
        working-directory: ${{ env.NPM_PACKAGE_DIR }}

      # this isn't ideal, but it's required becayse uv publish re-builds the npm packages even tho they were already built earlier.
      # i think to fix that i need to rewrite pdm_build.py to use the build hooks so we can control it more easily, but i can't get that to work soooo
      - name: set npm package versions back to upstream so pypi package can use it in --version output
        if: github.ref == 'refs/heads/main'
        run: npm version ${{ steps.current-version.outputs.CURRENT_UPSTREAM_VERSION }} --workspaces --no-git-tag-version

      - name: build package - pypi
        # try twice due to https://github.com/astral-sh/uv/issues/2235
        run: uv build --config-setting regenerate_docstubs=false
      - uses: actions/upload-artifact@v4
        with:
          name: dist${{ matrix.os }}
          path: dist
